/*
let string1 = 'This is ';
let number1 = 32;
let stringNum = '32';
let oopCheck = number1;
const con1 = 100

number1++;
++number1;

console.log(number1); // 34
console.log(oopCheck); // 32

console.log(string1 + number1); // This is 34
console.log(Number(string1)); // NaN
console.log(typeof(Number(string1))); // number

number1 -= 2;
console.log(number1); // 32

let bool = (number1 == stringNum); // 32 == '32' is true
console.log(bool);

console.log(bool*8); //8

let string2 = 'This is a string'
console.log(string2 - 'string'); // NaN
console.log(string2 * 1); //NaN

let x = 9;

console.log(x ** x);
console.log('b' - 1);
*/

                                                                                                №10

// Условное ветвление if

/*
// 2
let answer = prompt('Какое «официальное» название JavaScript?');
if (answer == 'ECMAScript') {
    alert('That is right');
} else {
    alert('You\'re wrong');
}
*/

/*
// 3
let input = prompt('Enter a number', '');
if (!(input === null)) {
    input = Number(input);
    if (input < 0) {
        alert(-1);
    } else if (input == 0) {
        alert(0);
    } else if (input > 0) {
        alert(1);
    } else {
        alert('You entered not a number');
    }
} 
*/

/*
// 4
let a = prompt('Enter first num');
let b = prompt('Enter second num');

// Сначала проверяются переменные a и b на их отношение к null и только после основное сравнение
let result = ((a === null) || (b === null)) ? null : 
    (Number(a) + Number(b) < 4) ? 'Not enough' : ' That\'s enough';

if (!!result) {
    alert(result);
} else {
    alert('Вы ничего не ввели или ошиблись при написании');
}
*/

/*
// 5
const login = prompt('Введите вашу должность');
let message = (login == 'Сотрудник') ? 'Привет' : 
    (login == 'Директор') ? 'Здравствуйте' :
    (login == '') ? 'Нет логина' : '';
alert(message);
*/



                                                                                                #12
/*
// switch
function calc(operation, a, b) {
    function add(a, b) {
        return a + b;
    }
    function multi(a, b) {
        return a * b;
    }
    function subtract(a, b) {
        return a - b;
    }

    if (!a || !b) { return 'Error'; }

    switch (operation) {
        case '+':
        case 'add':
            return add(a, b);
        case '*':
        case 'multi':
            return multi(a, b);
        case '-':
        case 'subtract':
            return subtract(a, b);
        default:
            return 'Error';
    }
}

let a = Number(prompt('Введите первое число'));
let b = Number(prompt('Введите второе число'));
operation = prompt('Введите операцию: add, multi, subtract');
alert(calc(operation, a, b));
*/


/*
let brw = prompt('Enter browser'); //browser
if (brw === 'Edge') {
    alert("You've got the edge!");
    break;
} else if (brw === 'Chrome' || brw === 'Firefox' || brw === 'Safari' || brw === 'Opera') {
    alert("Okay we support these browsers too");
    break;
} else {
    alert("We hope that this page looks ok!");
    break;
}
*/

/*
const number = +prompt('Введите число между 0 и 3');
switch (number) {
    case 0:
        alert('Вы ввели число 0');
        break;
    case 1:
        alert('Вы ввели число 1');
        break;
    case 2:
    case 3:
        alert('Вы ввели число 2, а может и 3');
        break;
}
*/

                                                                                18

/*
const teleg = {
    spam: '88005553535',
    "just number": '8536475610',
    infoOut() {
        console.log(this);
    },
    add(name, value) {
        this[name] = value;
    },
    removal(name) {
        delete this[name];
    },
}

console.log(teleg.spam, teleg["just number"]);

teleg["justNumber"] = teleg["just number"];
delete teleg['just number'];
teleg.spam = '+78005553535'
teleg.infoOut();


teleg.add("list", {});
teleg.infoOut();
teleg.list["spam"] = teleg.spam;
teleg.removal("spam");
teleg.infoOut();
teleg.list['justNumber'] = teleg['justNumber'];
teleg.removal('justNumber');
teleg.infoOut();

for (const name in teleg.list) {
    console.log(name, teleg.list[name]);
}
*/


                                                                                                №19
/*
const ToDo = {
    list: {
        "create a new practice task": "In Progress",
        "make a bed":"Done",
        "write a post": "ToDo",
    },
    changeStatus(name, status) {
        if (name in this.list) {
            this.list[name] = status;
        } else {
            console.log("This name doesn't exist. Write 'addTask' to create new task.");
        };
    },
    addTask(name, status="ToDo") {
        if (!(name in this.list)) {
            this.list[name] = status;
        } else {
            console.log("This name already exists. Write 'changeStatus' to change status of the task.");
        };
    },
    deleteTask(name) {
        if (name in this.list) {
            delete this.list[name];
        } else {
            console.log("This name doesn't exist.");
        }
    },
    showList() {
        console.log("ToDo:");
        let flag = false;
        for (const name in this.list) {
            const x = this.list[name];
            if (x === "ToDo" || x === "Todo" || x === "To Do" || x === "To do"){
                console.log('\t' + name);
                flag = true;
            }
        }
        if (!flag) {console.log('\t' + '-');}
        flag = false;
        console.log("In Progress:");
        for (const name in this.list) {
            if (this.list[name] === "In Progress"){
                console.log('\t' + name);
                flag = true;
            }
        }
        if (!flag) {console.log('\t' + '-');}
        flag = false;
        console.log("Done:");
        for (const name in this.list) {
            if (this.list[name] === "Done"){
                console.log('\t' + name);
                flag = true;
            }
        }
        if (!flag) {console.log('\t' + '-');}
    }
};

ToDo.addTask('to wash dishes');
ToDo.changeStatus("write a post", "Done");
ToDo.deleteTask("create a new practice task");
ToDo.showList();
*/                                                                                                
                                                                                                    №23

/*
function showVerticalMessage(str) {
    if (str.slice(0, 1) === 's' || str[0] === 's' || str.at(0) === 's' || str.startsWith('s')) {
        str = 'S' + str.slice(1);
    }

    if (str.length > 7) { 
        str = str.slice(0, 7) 
    }

    for (let char of str) {
        console.log(char);
    }
}

showVerticalMessage("strada111");
*/

                                                                                                №25

/*
const mas = [1,2,3,4,5];
mas.forEach(number => {
    console.log(`Number is ${number}`);
})

const animals = ['cat', 'dog', 'elephant', 'tiger', 'lion'];
animals.forEach(animal => {
    if (animal.length > 7) {
        console.log(animal);
        return;
    }
})

const numbers = [1, 11, -2, 3, -10, 4];
negativeNumbers = numbers.filter(number => number < 0);
console.log(negativeNumbers);

absoluteNumbers = numbers.map(number => Math.abs(number));
console.log(absoluteNumbers);

const sortedNumbers = numbers.sort((a, b) => b - a)
console.log(sortedNumbers); // [-10, -2, 1, 3, 4, 11]
console.log(numbers);

const ab = numbers.reverse(sortedNumbers)
console.log(60*0.8);
*/